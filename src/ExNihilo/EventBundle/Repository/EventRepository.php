<?php

namespace ExNihilo\EventBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;

/**
 * EventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventRepository extends EntityRepository
{
    public function getUserswithEvent($eventId)
    {
        $qb = $this->createQueryBuilder('e');


        $qb
            ->innerJoin('e.users', 'u')
            ->addSelect('u')
        ;

        $qb->where($qb->expr()->in('e.id', $eventId));

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }

    public function checkEvent($eventId, $userId)
    {
        $qb = $this->createQueryBuilder('e');

        $qb
            ->innerJoin('e.users', 'u')
            ->select('e')
            ->addSelect('u')
        ;
        $qb
            ->where($qb->expr()->in('e.id', $eventId))
            ->andWhere($qb->expr()->in('u.id', $userId))
        ;

        return $qb
            ->getQuery()
            ->getOneOrNullResult()
            ;
    }

    public function getMonthEvents()
    {
        $date = new \DateTime();
        $month = $date->format('m');
        $year = $date->format('Y');

        $emConfig = $this->getEntityManager()->getConfiguration();
        $emConfig->addCustomDatetimeFunction('YEAR', 'DoctrineExtensions\Query\Mysql\Year');
        $emConfig->addCustomDatetimeFunction('MONTH', 'DoctrineExtensions\Query\Mysql\Month');

        $qb = $this->createQueryBuilder('e');
        $qb->select('e')
            ->where('YEAR(e.date) = :year')
            ->andWhere('MONTH(e.date) = :month');

        $qb->setParameter('year', $year)
            ->setParameter('month', $month);

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }
}
